version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend-go:1.0.0
    ports:
      - "8080:8080"
    container_name: backend
    volumes:
      - db-data:/app/db
    networks:
      - backend-network
      - app-network
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend-react:1.0.0
    ports:
      - "3000:80"
    container_name: frontend
    networks:
      - app-network
    depends_on:
      - backend

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: image_sqlite
    container_name: sqlite
    volumes:
      - db-data:/data
      - ./database/init.sql:/data/init.sql
    entrypoint: |
      sh -c "
        sqlite3 /data/database.db < /data/init.sql &&
        tail -f /dev/null"
    networks:
      - backend-network

  redis:
    build:
      context: ./cache
      dockerfile: Dockerfile
    image: redis_image:6.2.6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin 
    volumes:
      - grafana-data:/var/lib/grafana 
    networks:
      - app-network
    depends_on:
      - redis  

networks:
  app-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  db-data:
  grafana-data:

